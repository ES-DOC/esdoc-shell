{
    "cells": [
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "## ES-DOC Model Documentation"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "**MIP Era**: {{ mip_era }}  \n",
                "**Institute**: {{ institute }}  \n",
                "**Model**: {{ model.upper() }}  \n",
                "**Realm**: {{ r.name_camel_case }}  \n",
                "**Realm Processes**: {% for p in r.processes %}{{ p.name_camel_case_spaced }}{% if p == r.processes[-1] %}.{% else %},{% end %} {% end %}  \n",
                "\n",
                "**Notebook Help**: [Goto notebook help page](http://wordpress.es-doc.org/how-to-document-cmip6-models)  \n",
                "**Notebook Initialised**: {{ unicode(now)[0:19] }}"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "### Documentation setup"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "# Import helper library - DO NOT EDIT !\n",
                "import pyesdoc"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "# Initialise documentation - DO NOT EDIT !\n",
                "DOC = {\n",
                "   'MIP_ERA': \"{{ mip_era.lower() }}\",\n",
                "   'INSTITUTE': \"{{ institute.lower() }}\",\n",
                "   'MODEL': \"{{ model.lower() }}\",\n",
                "   'REALM': \"{{ r.name.lower() }}\"\n",
                "}"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "# Specify authors (comma delimited list).\n",
                "DOC['AUTHORS'] = \"{{ DOC.get('AUTHORS') }}\""
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "# Specify contributors (comma delimited list).\n",
                "DOC['CONTRIBUTORS'] = \"{{ DOC.get('CONTRIBUTORS') }}\""
            ]
        },

        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "### {{ r.name_camel_case }} -->  Key Properties"
            ]
        },


{% for p in r.processes %}
{% for sp in p.sub_processes %}
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "### {{ r.name_camel_case }} -->  {{ p.doc_name }} --> {{ sp.doc_name }}\n",
                "*{{ sp.description }}*"
            ]
        },

{% for d in sp.details %}
{% for prp in d.properties %}
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "DOC['{{ prp.short_id(2) }}'] = \"{{ val(prp, DOC) }}\"\n",
                "# {{ prp.description }}  \n",
                {% if prp.typeof == 'bool' %}
                "# {{ p_hint(prp) }} \n",
                "#    \"True\"\n",
                "#    \"False\""
                {% elif prp.typeof == 'enum' %}
                "# {{ p_hint(prp) }} \n",
{% for c in prp.enum.choices %}
                "#    \"{{ c.value }}{% if c.is_other %}: [Please specify]{% end %}\" {% if c != prp.enum.choices[-1] %}\n{% end %}"{% if c != prp.enum.choices[-1] %},{% end %}
{% end %}
                {% else %}
                "# {{ p_hint(prp) }}"
                {% end %}
            ]
        },
{% end %}
{% end %}
{% end %}
{% end %}
    {
        "cell_type": "markdown",
        "metadata": {},
        "source": [
            "## ES-DOC: Validate Documentation - REVIEW AND FIX VALIDATION ERRORS !"
        ]
    },
    {
        "cell_type": "code",
        "execution_count": null,
        "metadata": {},
        "outputs": [],
        "source": [
            "# Validation errors will be listed - DO NOT EDIT !\n",
            "pyesdoc.list_notebook_output_errors(DOC)"
        ]
    },
    {
        "cell_type": "markdown",
        "metadata": {},
        "source": [
            "## ES-DOC: Persist Documentation - DO NOT EDIT !"
        ]
    },
    {
        "cell_type": "code",
        "execution_count": null,
        "metadata": {},
        "outputs": [],
        "source": [
            "try:\n",
            "    pyesdoc.write_notebook_output(DOC)\n",
            "except pyesdoc.NoteBookValidationError:\n",
            "    pass"
        ]
    }
    ],
    "metadata": {
        "kernelspec": {
            "display_name": "Python 2",
            "language": "python",
            "name": "python2"
        },
        "language_info": {
            "codemirror_mode": {
                "name": "ipython",
                "version": 2
            },
            "file_extension": ".py",
            "mimetype": "text/x-python",
            "name": "python",
            "nbconvert_exporter": "python",
            "pygments_lexer": "ipython2",
            "version": "2.7.10"
        }
    },
    "nbformat": 4,
    "nbformat_minor": 0
}